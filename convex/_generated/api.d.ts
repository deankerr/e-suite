/* eslint-disable */
/**
 * Generated `api` utility.
 *
 * THIS CODE IS AUTOMATICALLY GENERATED.
 *
 * Generated by convex@1.10.0.
 * To regenerate, run `npx convex dev`.
 * @module
 */

import type {
  ApiFromModules,
  FilterApi,
  FunctionReference,
} from "convex/server";
import type * as constants from "../constants.js";
import type * as functions from "../functions.js";
import type * as http from "../http.js";
import type * as providers_aws from "../providers/aws.js";
import type * as providers_clerk from "../providers/clerk.js";
import type * as providers_elevenlabs from "../providers/elevenlabs.js";
import type * as providers_sinkin from "../providers/sinkin.js";
import type * as providers_togetherai from "../providers/togetherai.js";
import type * as rules from "../rules.js";
import type * as types from "../types.js";
import type * as users from "../users.js";
import type * as util from "../util.js";
import type * as utils_retrier from "../utils/retrier.js";
import type * as validators from "../validators.js";

/**
 * A utility for referencing Convex functions in your app's API.
 *
 * Usage:
 * ```js
 * const myFunctionReference = api.myModule.myFunction;
 * ```
 */
declare const fullApi: ApiFromModules<{
  constants: typeof constants;
  functions: typeof functions;
  http: typeof http;
  "providers/aws": typeof providers_aws;
  "providers/clerk": typeof providers_clerk;
  "providers/elevenlabs": typeof providers_elevenlabs;
  "providers/sinkin": typeof providers_sinkin;
  "providers/togetherai": typeof providers_togetherai;
  rules: typeof rules;
  types: typeof types;
  users: typeof users;
  util: typeof util;
  "utils/retrier": typeof utils_retrier;
  validators: typeof validators;
}>;
export declare const api: FilterApi<
  typeof fullApi,
  FunctionReference<any, "public">
>;
export declare const internal: FilterApi<
  typeof fullApi,
  FunctionReference<any, "internal">
>;
