/**
 * Generated by orval v6.28.2 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import { z as zod } from 'zod'

/**
 * @summary Generate
 */
export const generatePostBodyControlGuidanceEndMin = 0

export const generatePostBodyControlGuidanceEndMax = 1
export const generatePostBodyNumInferenceStepsMin = 0

export const generatePostBodyNumInferenceStepsMax = 80
export const generatePostBodyGuidanceScaleMin = 0

export const generatePostBodyGuidanceScaleMax = 50
export const generatePostBodyControlGuidanceStartMin = 0

export const generatePostBodyControlGuidanceStartMax = 1
export const generatePostBodyImageSizeWidthMin = 0

export const generatePostBodyImageSizeWidthMax = 14142
export const generatePostBodyImageSizeHeightMin = 0

export const generatePostBodyImageSizeHeightMax = 14142

export const generatePostBody = zod.object({
  seed: zod.number().optional(),
  negative_prompt: zod.string().optional(),
  control_guidance_end: zod
    .number()
    .min(generatePostBodyControlGuidanceEndMin)
    .max(generatePostBodyControlGuidanceEndMax)
    .optional(),
  num_inference_steps: zod
    .number()
    .min(generatePostBodyNumInferenceStepsMin)
    .max(generatePostBodyNumInferenceStepsMax)
    .optional(),
  guidance_scale: zod
    .number()
    .min(generatePostBodyGuidanceScaleMin)
    .max(generatePostBodyGuidanceScaleMax)
    .optional(),
  control_guidance_start: zod
    .number()
    .min(generatePostBodyControlGuidanceStartMin)
    .max(generatePostBodyControlGuidanceStartMax)
    .optional(),
  scheduler: zod.enum(['DPM++ Karras SDE', 'Euler']).optional(),
  image_url: zod.string(),
  controlnet_conditioning_scale: zod.number().optional(),
  image_size: zod
    .object({
      width: zod
        .number()
        .min(generatePostBodyImageSizeWidthMin)
        .max(generatePostBodyImageSizeWidthMax)
        .optional(),
      height: zod
        .number()
        .min(generatePostBodyImageSizeHeightMin)
        .max(generatePostBodyImageSizeHeightMax)
        .optional(),
    })
    .or(
      zod.enum([
        'square_hd',
        'square',
        'portrait_4_3',
        'portrait_16_9',
        'landscape_4_3',
        'landscape_16_9',
      ]),
    )
    .optional(),
  prompt: zod.string(),
})

export const generatePostResponse = zod.object({
  seed: zod.number(),
  image: zod.object({
    width: zod.number().optional(),
    url: zod.string(),
    content_type: zod.string(),
    file_name: zod.string(),
    file_size: zod.number(),
    height: zod.number().optional(),
  }),
})
