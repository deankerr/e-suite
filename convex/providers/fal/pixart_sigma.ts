/**
 * Generated by orval v6.28.2 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import { z as zod } from 'zod'

/**
 * @summary Generate Image
 */
export const generateImagePostBodyNumImagesMax = 8
export const generateImagePostBodyImageSizeHeightMin = 0

export const generateImagePostBodyImageSizeHeightMax = 14142
export const generateImagePostBodyImageSizeWidthMin = 0

export const generateImagePostBodyImageSizeWidthMax = 14142
export const generateImagePostBodyGuidanceScaleMax = 10
export const generateImagePostBodyNumInferenceStepsMin = 5

export const generateImagePostBodyNumInferenceStepsMax = 50

export const generateImagePostBody = zod.object({
  prompt: zod.string(),
  num_images: zod.number().min(1).max(generateImagePostBodyNumImagesMax).optional(),
  image_size: zod
    .object({
      height: zod
        .number()
        .min(generateImagePostBodyImageSizeHeightMin)
        .max(generateImagePostBodyImageSizeHeightMax)
        .optional(),
      width: zod
        .number()
        .min(generateImagePostBodyImageSizeWidthMin)
        .max(generateImagePostBodyImageSizeWidthMax)
        .optional(),
    })
    .or(
      zod.enum([
        'square_hd',
        'square',
        'portrait_4_3',
        'portrait_16_9',
        'landscape_4_3',
        'landscape_16_9',
      ]),
    )
    .optional(),
  style: zod
    .enum([
      '(No style)',
      'Cinematic',
      'Photographic',
      'Anime',
      'Manga',
      'Digital Art',
      'Pixel art',
      'Fantasy art',
      'Neonpunk',
      '3D Model',
    ])
    .optional(),
  scheduler: zod.enum(['DPM-SOLVER', 'SA-SOLVER']).optional(),
  sync_mode: zod.boolean().optional(),
  guidance_scale: zod.number().min(1).max(generateImagePostBodyGuidanceScaleMax).optional(),
  num_inference_steps: zod
    .number()
    .min(generateImagePostBodyNumInferenceStepsMin)
    .max(generateImagePostBodyNumInferenceStepsMax)
    .optional(),
  seed: zod.number().optional(),
  negative_prompt: zod.string().optional(),
  enable_safety_checker: zod.boolean().optional(),
})

export const generateImagePostResponse = zod.object({
  prompt: zod.string(),
  images: zod.array(
    zod.object({
      file_size: zod.number().optional(),
      height: zod.number().optional(),
      url: zod.string(),
      width: zod.number().optional(),
      file_name: zod.string().optional(),
      content_type: zod.string().optional(),
      file_data: zod.string().optional(),
    }),
  ),
  timings: zod.record(zod.string(), zod.number()),
  has_nsfw_concepts: zod.array(zod.boolean()),
  seed: zod.number(),
})
