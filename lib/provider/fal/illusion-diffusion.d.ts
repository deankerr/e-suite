/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    /** Generate */
    post: operations["generate__post"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** IllusionDiffusionInput */
    IllusionDiffusionInput: {
      /**
       * Image Url
       * @description Input image url.
       */
      image_url: string;
      /**
       * Prompt
       * @description The prompt to use for generating the image. Be as descriptive as possible for best results.
       */
      prompt: string;
      /**
       * Negative Prompt
       * @description
       *             The negative prompt to use. Use it to address details that you don't want
       *             in the image. This could be colors, objects, scenery and even the small details
       *             (e.g. moustache, blurry, low resolution).
       *
       * @default
       */
      negative_prompt?: string;
      /**
       * Guidance Scale
       * @description
       *             The CFG (Classifier Free Guidance) scale is a measure of how close you want
       *             the model to stick to your prompt when looking for a related image to show you.
       *
       * @default 7.5
       */
      guidance_scale?: number;
      /**
       * Controlnet Conditioning Scale
       * @description The scale of the ControlNet.
       * @default 1
       */
      controlnet_conditioning_scale?: number;
      /**
       * Control Guidance Start
       * @default 0
       */
      control_guidance_start?: number;
      /**
       * Control Guidance End
       * @default 1
       */
      control_guidance_end?: number;
      /**
       * Seed
       * @description
       *             Seed of the generated Image. It will be the same value of the one passed in the
       *             input or the randomly generated that was used in case none was passed.
       *
       * @default 65423178
       */
      seed?: number;
      /**
       * Scheduler
       * @description Scheduler / sampler to use for the image denoising process.
       * @default Euler
       * @enum {string}
       */
      scheduler?: "DPM++ Karras SDE" | "Euler";
      /**
       * Number of inference steps
       * @description
       *             Increasing the amount of steps tells Stable Diffusion that it should take more steps
       *             to generate your final result which can increase the amount of detail in your image.
       *
       * @default 40
       */
      num_inference_steps?: number;
    };
    /** IllusionDiffusionOutput */
    IllusionDiffusionOutput: {
      /**
       * Image
       * @description The generated image file info.
       */
      image: components["schemas"]["Image"];
      /**
       * Seed
       * @description
       *             Seed of the generated Image. It will be the same value of the one passed in the
       *             input or the randomly generated that was used in case none was passed.
       */
      seed: number;
    };
    /**
     * Image
     * @description Represents an image file.
     */
    Image: {
      /**
       * Url
       * @description The URL where the file can be downloaded from.
       */
      url: string;
      /**
       * Content Type
       * @description The mime type of the file.
       */
      content_type: string;
      /**
       * File Name
       * @description The name of the file. It will be auto-generated if not provided.
       */
      file_name: string;
      /**
       * File Size
       * @description The size of the file in bytes.
       */
      file_size: number;
      /**
       * Width
       * @description The width of the image in pixels.
       */
      width?: number;
      /**
       * Height
       * @description The height of the image in pixels.
       */
      height?: number;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Generate */
  generate__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["IllusionDiffusionInput"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["IllusionDiffusionOutput"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
