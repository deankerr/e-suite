// https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String  @id
  firstName String?
  lastName  String?
  email     String?
  image     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  workbench Json     @default("{}")

  agents Agent[]
}

model Agent {
  id        String   @id @default(cuid())
  owner     User     @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownerId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String @default("Untitled")
  image String @default("")

  engine     Engine @relation(fields: [engineId], references: [id])
  engineId   String
  parameters Json   @default("{}")
}

model Engine {
  id    String @id
  model String
  type  String

  provider        Provider @relation(fields: [providerId], references: [id])
  providerId      String
  providerModelId String

  displayName String
  creator     String

  costInputNanoUSD  Int
  costOutputNanoUSD Int

  description      String?
  url              String?
  license          String?
  parameterSizeMil Int? // millions
  contextLength    Int?

  tokenizer        String?
  instructType     String?
  promptFormat     String?
  stopTokens       String[] @default([])
  outputTokenLimit Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  available Boolean  @default(true)
  comment   String[] @default([])

  Agent Agent[]
}

model Provider {
  id          String   @id // openai | openrouter | togetherai
  displayName String
  url         String
  engines     Engine[]
}
